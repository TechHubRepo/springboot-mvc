--- # Define the PersistentVolume for mysql database
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 3Gi
  hostPath:
    path: /AppData/mysql
    type: Directory

--- # Define PersistentVolumeClaim for mysql database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

--- # Define the ConfigMap for database
apiVersion : v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  hostName: mysql-service
  portNumber: '3308'
  databaseName: customer_service

--- # Define the Secret for database
apiVersion : v1
kind : Secret
metadata:
  name : mysql-secret
data:
  username: cm9vdA==
  password: cm9vdA==

--- # Define the Deployment for database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mysql
      tier: database
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      containers:
      - name: mysql-database-pod
        image: mysql:8.0.36-debian
        imagePullPolicy: Always
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: databaseName
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim

--- # The service to expose mysql to other services
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 3308
    targetPort: 3306
  selector:
    app: mysql
    tier: database
